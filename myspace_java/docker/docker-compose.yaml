version: '3.9'
services:
  nginx:
    container_name: myspace_nginx
    image: nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    volumes:
      - /data/nginx/html:/usr/share/nginx/html
      - /data/nginx/conf:/etc/nginx/conf.d
      - /data/nginx/logs:/var/log/nginx
    networks:
      myspace_net:
        aliases:
          - myspace_nginx
    restart: always
  api:
    container_name: myspace_api
      build:
        context: .
        dockerfile: api/Dockerfile
      ports:
        - "8083:8083"
      volumes:
        - /data/web/uploadPath:/usr/local/myspace/uploadPath
        - /data/web/logs:/usr/local/myspace/logs
      depends_on:
        - mysql
        - redis
        - zookeeper
        - kafka
      networks:
        myspace_net:
          aliases:
            - myspace_api
      restart: always
  deploy:
    container_name: myspace_deploy
    build:
      context: .
      dockerfile: deploy/Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - /data/web/uploadPath:/usr/local/myspace/uploadPath
      - /data/web/logs:/usr/local/myspace/logs
    depends_on:
      - mysql
      - redis
      - zookeeper
      - kafka
    networks:
      myspace_net:
        aliases:
          - myspace_deploy
    restart: always
  mysql:
    container_name: myspace_mysql
    build:
      context: .
      dockerfile: mysql/Dockerfile
    ports:
      - "3306:3306"
    volumes:
      - /data/mysql/data:/var/lib/mysql
      - /data/mysql/conf:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: myspace
    networks:
      myspace_net:
        aliases:
          - myspace_mysql
    restart: always
  redis:
    container_name: myspace_redis
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - /data/redis/data:/data
      - /data/redis/conf/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf --appendonly yes
    networks:
      myspace_net:
        aliases:
          - myspace_redis
    restart: always
  zookeeper:
    container_name: myspace_zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      myspace_net:
        aliases:
          - myspace_zookeeper
    restart: always
  kafka:
    container_name: myspace_kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    command: /bin/bash -c "cd opt/kafka/bin && ./kafka-topics.sh --create --zookeeper 192.168.0.2:2181 --replication-factor 1 --partitions 1 --topic myspace_order_partake && ./kafka-topics.sh --create --zookeeper 192.168.0.2:2181 --replication-factor 1 --partitions 1 --topic myspace_order_invoice"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: myspace_zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_LISTENERS=PLAINTEXT: //0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - /etc/localtime:/etc/localtime
    depends_on:
      - zookeeper
    networks:
      myspace_net:
        aliases:
          - myspace_kafka
    restart: always
  nacos:
    container_name: myspace_nacos
    image: nacos/nacos-server
    ports:
      - "8848:8848"
    environment:
      - MODE=standalone
    networks:
      myspace_net:
        aliases:
          - myspace_nacos
    restart: always
networks:
  vacation_net: